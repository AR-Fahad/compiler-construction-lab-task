int -> INT
main -> MAIN
( -> LP
) -> RP
{ -> LB
int -> INT
n -> ID
, -> COMMA
sum -> ID
= -> ASSIGN
0 -> NUMBER
; -> SEMI
printf -> PRINTF
( -> LP
" -> DOUBLE_QUOTE
Enter -> ID
a -> ID
number -> ID
: -> UNKNOWN
" -> DOUBLE_QUOTE
) -> RP
; -> SEMI
scanf -> SCANF
( -> LP
" -> DOUBLE_QUOTE
%d -> FORMAT_SPECIFIER
" -> DOUBLE_QUOTE
, -> COMMA
& -> ADDRESS
n -> ID
) -> RP
; -> SEMI
for -> FOR
( -> LP
int -> INT
i -> ID
= -> ASSIGN
1 -> NUMBER
; -> SEMI
i -> ID
<= -> LE
n -> ID
; -> SEMI
i -> ID
++ -> INCREMENT
) -> RP
{ -> LB
sum -> ID
+ -> ADD
= -> ASSIGN
i -> ID
; -> SEMI
} -> RB
printf -> PRINTF
( -> LP
" -> DOUBLE_QUOTE
Sum -> ID
of -> ID
first -> ID
%d -> FORMAT_SPECIFIER
natural -> ID
numbers -> ID
= -> ASSIGN
%d -> FORMAT_SPECIFIER
\n -> ESCAPED_NEWLINE
" -> DOUBLE_QUOTE
, -> COMMA
n -> ID
, -> COMMA
sum -> ID
) -> RP
; -> SEMI
return -> RETURN
0 -> NUMBER
; -> SEMI
} -> RB
